Problem 2
---------

 > Each new term in the Fibonacci sequence is generated by adding the previous
 two terms. By starting with 1 and 2, the first 10 terms will be:
 >
 > 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 >
 > By considering the terms in the Fibonacci sequence whose values do not
 exceed four million, find the sum of the even-valued terms.

Start by defining an infinite sequence to generate Fibonacci values, a
particularly elegant operation in Haskell.

> fibonacci = seq 0 1 where seq x y = (x+y):(seq y (x+y))

With this definition, an expressive solution is once again possible.

> euler2 n = sum . filter even . takeWhile (<= n) $ fibonacci

> tests2 =
>   [ "#2 test"    ~: 44      ~=? euler2 40
>   , "#2 problem" ~: 4613732 ~=? euler2 4000000
>   ]
